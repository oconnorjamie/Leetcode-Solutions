class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        n = len(s)
        if n == 0:
            return 0
        elif n == 1:
            return 1

        maxlen = 0
        freq = {}  # Dictionary to track frequency of characters
        i = 0
        j = 0  # Fixing the starting value of j
        res = 0

        while j < n:  # Fix condition to ensure j is within range
            freq[s[j]] = freq.get(s[j], 0) + 1

            while freq[s[j]] > 1:  # Fixing the syntax here
                freq[s[i]] -= 1
                i += 1  # Move left pointer

            res = max(res, j - i + 1)  # Track longest substring length
            j += 1  # Expand window

        return res
